; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.228 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GHFPNOJB@bad?5allocation?$AA@		; `string'
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2_KB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?global@@3HA					; global
_BSS	SEGMENT
?global@@3HA DD	01H DUP (?)				; global
_BSS	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2_KB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2_KB DQ 0000000000000100H	; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
CONST	SEGMENT
__Fpz	DQ	0000000000000000H
CONST	ENDS
_DATA	SEGMENT
_bad_alloc_Message DQ FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
CONST	SEGMENT
??_C@_0P@GHFPNOJB@bad?5allocation?$AA@ DB 'bad allocation', 00H ; `string'
CONST	ENDS
PUBLIC	?ex_filter@@YAKXZ				; ex_filter
; Function compile flags: /Odtp
; File c:\awd\chapter2\funcav.cpp
;	COMDAT ?ex_filter@@YAKXZ
_TEXT	SEGMENT
?ex_filter@@YAKXZ PROC					; ex_filter, COMDAT

; 24   :     return EXCEPTION_EXECUTE_HANDLER;

  00000	b8 01 00 00 00	 mov	 eax, 1

; 25   : }

  00005	c3		 ret	 0
?ex_filter@@YAKXZ ENDP					; ex_filter
_TEXT	ENDS
PUBLIC	?try_except@@YAXXZ				; try_except
EXTRN	__C_specific_handler:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?try_except@@YAXXZ DD imagerel $LN9
	DD	imagerel $LN9+32
	DD	imagerel $unwind$?try_except@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?filt$0@?0??try_except@@YAXXZ@4HA DD imagerel ?filt$0@?0??try_except@@YAXXZ@4HA
	DD	imagerel ?filt$0@?0??try_except@@YAXXZ@4HA+29
	DD	imagerel $unwind$?filt$0@?0??try_except@@YAXXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?filt$0@?0??try_except@@YAXXZ@4HA DD 020f01H
	DD	0500b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?try_except@@YAXXZ DD 010409H
	DD	04204H
	DD	imagerel __C_specific_handler
	DD	01H
	DD	imagerel $LN9+4
	DD	imagerel $LN9+17
	DD	imagerel ?filt$0@?0??try_except@@YAXXZ@4HA
	DD	imagerel $LN9+17
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?try_except@@YAXXZ
_TEXT	SEGMENT
?try_except@@YAXXZ PROC					; try_except, COMDAT

; 28   : {

$LN9:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 29   :     __try
; 30   :     {
; 31   :         *((int *) 0) = 0;

  00004	c7 04 25 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ds:0, 0

; 32   :     }

  0000f	eb 0a		 jmp	 SHORT $LN4@try_except
$LN6@try_except:

; 33   :     __except(ex_filter())
; 34   :     {
; 35   :     global = 1;

  00011	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?global@@3HA, 1 ; global
$LN4@try_except:

; 36   :     }
; 37   : }

  0001b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001f	c3		 ret	 0
?try_except@@YAXXZ ENDP					; try_except
; Function compile flags: /Odtp
?filt$0@?0??try_except@@YAXXZ@4HA PROC			; `try_except'::`1'::filt$0
  00020	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00025	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002a	55		 push	 rbp
  0002b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0002f	48 8b ea	 mov	 rbp, rdx
$LN5@filt$0:

; 33   :     __except(ex_filter())

  00032	e8 00 00 00 00	 call	 ?ex_filter@@YAKXZ	; ex_filter
$LN7@filt$0:
  00037	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003b	5d		 pop	 rbp
  0003c	c3		 ret	 0
?filt$0@?0??try_except@@YAXXZ@4HA ENDP			; `try_except'::`1'::filt$0
_TEXT	ENDS
PUBLIC	?try_finally@@YAXXZ				; try_finally
;	COMDAT pdata
pdata	SEGMENT
$pdata$?try_finally@@YAXXZ DD imagerel $LN9
	DD	imagerel $LN9+22
	DD	imagerel $unwind$?try_finally@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fin$0@?0??try_finally@@YAXXZ@4HA DD imagerel ?fin$0@?0??try_finally@@YAXXZ@4HA
	DD	imagerel ?fin$0@?0??try_finally@@YAXXZ@4HA+26
	DD	imagerel $unwind$?fin$0@?0??try_finally@@YAXXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fin$0@?0??try_finally@@YAXXZ@4HA DD 010b01H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?try_finally@@YAXXZ DD 011H
	DD	imagerel __C_specific_handler
	DD	01H
	DD	imagerel $LN9
	DD	imagerel $LN9+11
	DD	imagerel ?fin$0@?0??try_finally@@YAXXZ@4HA
	DD	00H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?try_finally@@YAXXZ
_TEXT	SEGMENT
?try_finally@@YAXXZ PROC				; try_finally, COMDAT

; 39   : {

$LN9:

; 40   :     __try
; 41   :     {
; 42   :         *((int *) 0) = 0;

  00000	c7 04 25 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ds:0, 0
$LN8@try_finall:

; 43   :     }
; 44   :     __finally
; 45   :     {
; 46   :     global = 2;

  0000b	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?global@@3HA, 2 ; global
$LN4@try_finall:

; 47   :     }
; 48   : 
; 49   : }

  00015	c3		 ret	 0
?try_finally@@YAXXZ ENDP				; try_finally
; Function compile flags: /Odtp
?fin$0@?0??try_finally@@YAXXZ@4HA PROC			; `try_finally'::`1'::fin$0

; 44   :     __finally

  00020	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00025	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0002a	55		 push	 rbp
  0002b	48 8b ea	 mov	 rbp, rdx
$LN5@fin$0:

; 45   :     {
; 46   :     global = 2;

  0002e	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?global@@3HA, 2 ; global
$LN6@fin$0:
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?fin$0@?0??try_finally@@YAXXZ@4HA ENDP			; `try_finally'::`1'::fin$0
_TEXT	ENDS
PUBLIC	?try_except_finally@@YAXXZ			; try_except_finally
;	COMDAT pdata
pdata	SEGMENT
$pdata$?try_except_finally@@YAXXZ DD imagerel $LN19
	DD	imagerel $LN19+65
	DD	imagerel $unwind$?try_except_finally@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?fin$0@?0??try_except_finally@@YAXXZ@4HA DD imagerel ?fin$0@?0??try_except_finally@@YAXXZ@4HA
	DD	imagerel ?fin$0@?0??try_except_finally@@YAXXZ@4HA+34
	DD	imagerel $unwind$?fin$0@?0??try_except_finally@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?filt$1@?0??try_except_finally@@YAXXZ@4HA DD imagerel ?filt$1@?0??try_except_finally@@YAXXZ@4HA
	DD	imagerel ?filt$1@?0??try_except_finally@@YAXXZ@4HA+29
	DD	imagerel $unwind$?filt$1@?0??try_except_finally@@YAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?filt$2@?0??try_except_finally@@YAXXZ@4HA DD imagerel ?filt$2@?0??try_except_finally@@YAXXZ@4HA
	DD	imagerel ?filt$2@?0??try_except_finally@@YAXXZ@4HA+29
	DD	imagerel $unwind$?filt$2@?0??try_except_finally@@YAXXZ@4HA
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?filt$2@?0??try_except_finally@@YAXXZ@4HA DD 020f01H
	DD	0500b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?filt$1@?0??try_except_finally@@YAXXZ@4HA DD 020f01H
	DD	0500b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?fin$0@?0??try_except_finally@@YAXXZ@4HA DD 020f01H
	DD	0500b320fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?try_except_finally@@YAXXZ DD 010419H
	DD	04204H
	DD	imagerel __C_specific_handler
	DD	03H
	DD	imagerel $LN19+4
	DD	imagerel $LN19+15
	DD	imagerel ?fin$0@?0??try_except_finally@@YAXXZ@4HA
	DD	00H
	DD	imagerel $LN19+4
	DD	imagerel $LN19+27
	DD	imagerel ?filt$1@?0??try_except_finally@@YAXXZ@4HA
	DD	imagerel $LN19+27
	DD	imagerel $LN19+37
	DD	imagerel $LN19+50
	DD	imagerel ?filt$2@?0??try_except_finally@@YAXXZ@4HA
	DD	imagerel $LN19+50
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?try_except_finally@@YAXXZ
_TEXT	SEGMENT
?try_except_finally@@YAXXZ PROC				; try_except_finally, COMDAT

; 52   : {

$LN19:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 53   :     __try
; 54   :     {
; 55   :         __try
; 56   :         {
; 57   :             *((int *) 0) = 0;

  00004	c7 04 25 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ds:0, 0
$LN14@try_except@2:

; 58   :         }
; 59   :         __finally
; 60   :         {
; 61   :         global = 3;

  0000f	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?global@@3HA, 3 ; global

; 62   :         }
; 63   : 
; 64   :     }

  00019	eb 0a		 jmp	 SHORT $LN10@try_except@2
$LN8@try_except@2:

; 65   :     __except(ex_filter())
; 66   :     {
; 67   :     global = 4;

  0001b	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?global@@3HA, 4 ; global
$LN10@try_except@2:

; 68   :     }
; 69   :     __try
; 70   :     {
; 71   :         *((int *) 0) = 0;

  00025	c7 04 25 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ds:0, 0

; 72   :     }

  00030	eb 0a		 jmp	 SHORT $LN6@try_except@2
$LN16@try_except@2:

; 73   :     __except(ex_filter())
; 74   :     {
; 75   :     global = 5;

  00032	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?global@@3HA, 5 ; global
$LN6@try_except@2:

; 76   :     }
; 77   : 
; 78   : }

  0003c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00040	c3		 ret	 0
?try_except_finally@@YAXXZ ENDP				; try_except_finally
; Function compile flags: /Odtp
?fin$0@?0??try_except_finally@@YAXXZ@4HA PROC		; `try_except_finally'::`1'::fin$0

; 59   :         __finally

  00050	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00055	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0005a	55		 push	 rbp
  0005b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0005f	48 8b ea	 mov	 rbp, rdx
$LN11@fin$0@2:

; 60   :         {
; 61   :         global = 3;

  00062	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?global@@3HA, 3 ; global
$LN12@fin$0@2:
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?fin$0@?0??try_except_finally@@YAXXZ@4HA ENDP		; `try_except_finally'::`1'::fin$0
; Function compile flags: /Odtp
?filt$1@?0??try_except_finally@@YAXXZ@4HA PROC		; `try_except_finally'::`1'::filt$1
  00080	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00085	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0008a	55		 push	 rbp
  0008b	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 65   :     __except(ex_filter())

  0008f	48 8b ea	 mov	 rbp, rdx
$LN7@filt$1:
  00092	e8 00 00 00 00	 call	 ?ex_filter@@YAKXZ	; ex_filter
$LN9@filt$1:
  00097	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
?filt$1@?0??try_except_finally@@YAXXZ@4HA ENDP		; `try_except_finally'::`1'::filt$1
; Function compile flags: /Odtp
?filt$2@?0??try_except_finally@@YAXXZ@4HA PROC		; `try_except_finally'::`1'::filt$2
  000a0	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  000a5	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  000aa	55		 push	 rbp
  000ab	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 73   :     __except(ex_filter())

  000af	48 8b ea	 mov	 rbp, rdx
$LN15@filt$2:
  000b2	e8 00 00 00 00	 call	 ?ex_filter@@YAKXZ	; ex_filter
$LN17@filt$2:
  000b7	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
?filt$2@?0??try_except_finally@@YAXXZ@4HA ENDP		; `try_except_finally'::`1'::filt$2
_TEXT	ENDS
END
